; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[env]
build_flags =
  -D BUILD_ENV_NAME=$PIOENV
  -D CURRENT_TIME=$UNIX_TIME
  -Wall -Wextra -Werror
  -Iinclude
lib_ldf_mode = deep+
build_type = debug  # otherwise it strips debug symbols

[sketch]
build_src_filter = +<*> -<.git/> -<.svn/> -<envs/*> +<envs/${PIOENV}/*>

[atmega328p]
board_build.f_cpu = 1000000
upload_protocol = custom
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i
upload_port = usbtiny
upload_flags =
    -C
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    ${BOARD_MCU}
    -c
    ${UPLOAD_PORT}
platform = atmelavr
board = ATmega328P
test_filter = atmega328p/*
test_speed = 9600

[env:millis]
extends = atmega328p, sketch

[env:sleep]
extends = atmega328p, sketch

[env:rotary-encoder]
extends = atmega328p, sketch

[env:state_machine]
extends = atmega328p, sketch

[env:application]
extends = atmega328p, sketch

[env:buzzer]
extends = atmega328p, sketch

[env:max72xx]
extends = atmega328p, sketch

[env:fat_font]
extends = atmega328p, sketch

[env:render_timer_view]
extends = atmega328p, sketch

[env:native]
extends = sketch
platform = native
test_filter = native/*

[env:test_uint8_queue]
extends = atmega328p, sketch

[env:test_SPI_interrupt]
extends = atmega328p, sketch

[env:bootloader]
extends = atmega328p, sketch
board_bootloader.file = .pio/build/bootloader/firmware.hex  # doesn't work?
board_bootloader.lfuse = 0x62
board_bootloader.hfuse = 0xD0
board_bootloader.efuse = 0xFF
build_unflags = -Werror
build_flags = ${env.build_flags}
    -g3 -ggdb3
    -Wl,-section-start=.text=0x7000 ; make all code go into the bootloader section
upload_command = avrdude $UPLOAD_FLAGS -U lfuse:w:0x62:m -U hfuse:w:0xD0:m -U efuse:w:0xFF:m -U flash:w:$SOURCE:i
